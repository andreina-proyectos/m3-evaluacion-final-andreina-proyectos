{"version":3,"sources":["components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","App.js","services/FetchData.js","index.js"],"names":["Filters","props","handleInputChange","query","className","htmlFor","value","onChange","id","type","placeholder","CharacterCard","name","img","species","src","alt","CharacterList","rmData","filter","item","toUpperCase","includes","map","key","to","image","Home","Fragment","CharacterDetail","routerProps","characterId","parseInt","match","params","length","cardClicked","find","origin","status","episode","role","aria-label","App","state","bind","this","getFetchData","fetch","then","response","json","data","setState","results","event","currentTarget","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b383502e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n  const {handleInputChange, query} = props;\n  return(\n    <div className=\"app__filters\">\n      <label htmlFor=\"input\">Busca tu personaje favorito </label>\n      <input value={query} onChange={handleInputChange} id=\"input\" type=\"text\" className=\"filter\" placeholder=\"                    Buscar🔎\"/>\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  const {name, img, species} = props;\n  return(\n    <div className=\"card__content\">\n      <img src={img} alt={`Imagen de ${name}`} className=\"character__image\"/>\n      <h2 className=\"character__name\">{name}</h2>\n      <p className=\"character__specie\">{species}</p>\n    </div>\n  )\n}\n \nCharacterCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n  const {rmData, query} = props;\n  return(\n  <div className=\"app__list-container\">\n    <ul className=\"character-list\">\n      {rmData\n        .filter(item => {\n          return(\n            item.name.toUpperCase().includes(query.toUpperCase())\n          )\n        })\n        .map(item => {\n          return(         \n            <li key={item.id} className=\"character__card\">\n              <Link to={`/character-detail/${item.id}`}>\n                <CharacterCard\n                name = {item.name}\n                img = {item.image}\n                species = {item.species}\n                />\n              </Link>\n            </li> \n          )\n        })\n      }\n    </ul>\n  </div>\n  )\n}\n\nCharacterList.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default CharacterList;","import React from 'react';\nimport Filters from './Filters'\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const {rmData, query, handleInputChange} = props;\n  return (\n    <React.Fragment>\n      <Filters\n        handleInputChange={handleInputChange}\n        query={query}\n      />\n      <CharacterList\n        rmData={rmData}\n        query={query} \n      />\n    </React.Fragment>\n    );\n};\n\nHome.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n};\n\nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = props => {\n  const {rmData, routerProps} = props;\n  const characterId = parseInt(routerProps.match.params.id);\n\n  if(characterId > rmData.length) {\n    return(\n      <React.Fragment>\n        <p className=\"message-route\">Sólo tenemos 20 personajes!</p>\n        <Link to=\"/\" className=\"link__go-back\">Go back!</Link>\n      </React.Fragment>\n    )}\n  else {};\n\n \n  const cardClicked = rmData.find(item =>item.id === characterId);\n\n\n  const isAlive = () => {\n    if (cardClicked.status === 'Dead') {\n      return(\n      `Status: ${cardClicked.status}☠️`\n      )}\n    else if (cardClicked.status === 'Alive') {\n      return(\n      `Status: ${cardClicked.status}🤸🏼‍♀️`\n      )}\n      else{\n        return(`Status: ${cardClicked.status}❓`)\n      }\n  };\n\n  if(cardClicked) {\n    const {name, image, species, status, origin, episode} = cardClicked;\n    return (\n      <React.Fragment>\n        <Link to=\"/\" className=\"link__go-back\">Go back! <span role=\"img\" aria-label=\"arrow to go back \">⬅️</span></Link>\n        <div className=\"app__detail\">\n          <div className=\"detail__card character__card\">\n            <div className=\"image-container\">\n              <img src={image} alt={`Imagen de ${name}`} className=\"detail__image\"/>\n            </div>\n            <h2 className=\"character__name\">{name}</h2>\n            <p className=\"detail__status\">{isAlive()}</p>  \n            <p className=\"character__specie\">{`Species: ${species}`}</p>  \n            <p className=\"detail__origin\">{`Origin: ${origin.name}`}</p>\n            <p className=\"detail__episode\">{`Episodes: ${episode.length}`}</p> \n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n  else{\n    return(\n      <React.Fragment>\n        <p className=\"not-found-phrase\">No tenemos este personaje</p>\n        <Link to=\"/\" className=\"link__go-back\">Go back! <span role=\"img\" aria-label=\"arrow to go back \">⬅️</span></Link>\n      </React.Fragment>  \n    )\n  }\n};\n\nCharacterDetail.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  routerProps: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport './index.scss';\nimport {fetchData} from './services/FetchData';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\nimport {Link} from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rmData:[],\n      query:''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFetchData();\n  }\n\n  getFetchData() {\n    fetchData()\n      .then(data => {\n        this.setState({\n          rmData:data.results\n        })\n      })\n  }\n\n  handleInputChange(event) {\n      const query = event.currentTarget.value;\n      this.setState({\n        query: query\n      })   \n  }\n\n  render() {\n    const {rmData, query} = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"app__header\">\n          <Link className=\"app__title-link\" to=\"/\">\n            <h1 className=\"app__title\">RICK AND MORTY CHARACTERS</h1>\n          </Link>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                handleInputChange={this.handleInputChange}\n                rmData={rmData}\n                query={query}\n              />\n            )\n          }} \n          />\n\n          <Route path=\"/character-detail/:id\" render={(routerProps)=> {\n            return(\n              <CharacterDetail\n              routerProps={routerProps}\n              rmData={rmData}\n              />\n            )\n          }} \n          />\n        </Switch>\n        <footer className=\"app__footer\">\n          <p className=\"footer__phrase\">Created with <span role=\"img\" aria-label=\"heart\">❣️</span> by Andreina Romero García in Adalab</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchData = () => {\n    return fetch(endpoint).then(response => response.json())\n}\n\nexport {fetchData};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));"],"sourceRoot":""}