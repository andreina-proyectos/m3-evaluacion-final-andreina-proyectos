{"version":3,"sources":["components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","App.js","services/FetchData.js","index.js"],"names":["Filters","props","handleInputChange","query","getUserGender","handleIsHuman","handleIsAlien","handleChangeOrigin","origin","className","htmlFor","value","onChange","id","type","placeholder","name","CharacterCard","img","species","src","alt","CharacterList","rmData","gender","alien","human","filter","item","toUpperCase","includes","map","key","to","image","Home","Fragment","CharacterDetail","routerProps","characterId","parseInt","match","params","length","cardClicked","find","episode","role","aria-label","status","App","state","bind","this","getFetchData","fetch","then","response","json","data","setState","results","event","currentTarget","genderSelected","isChecked","checked","originSearched","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.21ad63ad.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n  const {handleInputChange, query, getUserGender, handleIsHuman, handleIsAlien, handleChangeOrigin, origin} = props;\n  \n  return(\n    <div className=\"app__filters\">\n      <label htmlFor=\"input\">Busca tu personaje favorito por nombre o g√©nero </label>\n      <input value={query} onChange={handleInputChange} id=\"input\" type=\"text\" className=\"filter\" placeholder=\"                    Buscarüîé\"/>\n\n      <select className=\"filter__select\" name=\"\" id=\"\" onChange={getUserGender}>\n        <option value=\"all\">All</option>\n        <option value=\"Female\">Female</option>\n        <option value=\"Male\">Male</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n\n      <label htmlFor=\"human\" className=\"filter-human\">Human\n      <input onChange={handleIsHuman} type=\"checkbox\" name=\"\" id=\"human\"/>\n      </label>\n      <label htmlFor=\"human\" className=\"filter-human\">Alien\n      <input onChange={handleIsAlien} type=\"checkbox\" name=\"\" id=\"human\"/>\n      </label>\n\n      <label htmlFor=\"origin\"></label>\n      <input value={origin} onChange={handleChangeOrigin} id=\"origin\"  type=\"text\" className=\"filter-origin inputfilter\" placeholder=\"Escribe un planeta\"/>\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  const {name, img, species} = props;\n  return(\n    <div className=\"card__content\">\n      <img src={img} alt={`Imagen de ${name}`} className=\"character__image\"/>\n      <h2 className=\"character__name\">{name}</h2>\n      <p className=\"character__specie\">{species}</p>\n    </div>\n  )\n}\n \nCharacterCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n  const {rmData, query, gender, alien, human, origin} = props;\n\n  return(\n    <div className=\"app__list-container\">\n      <ul className=\"character-list\">\n      {rmData\n        .filter(item => \n          item.origin.name.toUpperCase().includes(origin.toUpperCase())\n        )\n        .filter(item => {\n          if(human && item.species === 'Human') {\n            return true\n          }\n          else if(human && item.species !== 'Human') {\n            return false\n          }\n          else {\n            return true\n          }\n        })\n        .filter(item => {\n          if(alien && item.species === 'Alien') {\n            return true\n          }\n          else if (alien && item.species !== 'Alien') {\n            return false\n          }\n          else {\n            return true\n          }\n        })\n        .filter(item => gender===item.gender || gender==='all')\n        .filter(item => item.name.toUpperCase().includes(query.toUpperCase()) )\n        .map(item => {\n          return(         \n            <li key={item.id} className=\"character__card\">\n              <Link to={`/character-detail/${item.id}`}>\n                <CharacterCard\n                  name = {item.name}\n                  img = {item.image}\n                  species = {item.species}\n                />\n              </Link>\n            </li> \n          )\n        })\n      }\n    </ul>\n  </div>\n  )\n}\n\nCharacterList.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default CharacterList;","import React from 'react';\nimport Filters from './Filters'\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const {rmData, query, handleInputChange, gender, getUserGender, handleIsHuman, handleIsAlien, human, alien, handleChangeOrigin, origin} = props;\n  \n  return (\n    <React.Fragment>\n      <Filters\n        getUserGender={getUserGender}\n        handleInputChange={handleInputChange}\n        query={query}\n        handleIsHuman={handleIsHuman}\n        handleIsAlien={handleIsAlien}\n        handleChangeOrigin={handleChangeOrigin}\n        origin={origin}\n      />\n      <CharacterList\n        rmData={rmData}\n        query={query} \n        gender={gender}\n        human={human}\n        alien={alien}\n        origin={origin}\n      />\n    </React.Fragment>\n    );\n};\n\nHome.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n};\n\nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = props => {\n  const {rmData, routerProps} = props;\n  const characterId = parseInt(routerProps.match.params.id);\n\n  if(characterId > rmData.length) {\n    return(\n      <React.Fragment>\n        <p className=\"message-route\">S√≥lo tenemos 20 personajes!</p>\n        <Link to=\"/\" className=\"link__go-back\">Go back!</Link>\n      </React.Fragment>\n    )\n  }\n\n  const cardClicked = rmData.find(item =>item.id === characterId);\n  const isAlive = () => {\n    if (cardClicked.status === 'Dead') {\n      return(\n        `Status: ${cardClicked.status}‚ò†Ô∏è`\n      )}\n    else if (cardClicked.status === 'Alive') {\n      return(\n        `Status: ${cardClicked.status}ü§∏üèº‚Äç‚ôÄÔ∏è`\n      )}\n      else{\n        return(`Status: ${cardClicked.status}‚ùì`)\n      }\n  };\n\n  \n  if(cardClicked) {\n    const {name, image, species, origin, episode} = cardClicked;\n    return (\n      <React.Fragment>\n        <Link to=\"/\" className=\"link__go-back\">Go back! <span role=\"img\" aria-label=\"arrow to go back \">‚¨ÖÔ∏è</span>\n        </Link>\n        <div className=\"app__detail\">\n          <div className=\"detail__card character__card\">\n            <div className=\"image-container\">\n              <img src={image} alt={`Imagen de ${name}`} className=\"detail__image\"/>\n            </div>\n            <h2 className=\"character__name\">{name}</h2>\n            <p className=\"detail__status\">{isAlive()}</p>  \n            <p className=\"character__specie\">{`Species: ${species}`}</p>  \n            <p className=\"detail__origin\">{`Origin: ${origin.name}`}</p>\n            <p className=\"detail__episode\">{`Episodes: ${episode.length}`}</p> \n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  else{\n    return(\n      <React.Fragment>\n        <p className=\"not-found-phrase\">No tenemos este personaje</p>\n        <Link to=\"/\" className=\"link__go-back\">Go back! <span role=\"img\" aria-label=\"arrow to go back \">‚¨ÖÔ∏è</span>\n        </Link>\n      </React.Fragment>  \n    )\n  }\n};\n\nCharacterDetail.propTypes = {\n  rmData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  routerProps: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport './index.scss';\nimport {fetchData} from './services/FetchData';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rmData:[],\n      query:'',\n      gender:'all',\n      human: false,\n      alien: false,\n      origin:'',\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getUserGender = this.getUserGender.bind(this);\n    this.handleIsHuman = this.handleIsHuman.bind(this);\n    this.handleIsAlien = this.handleIsAlien.bind(this);\n    this.handleChangeOrigin = this.handleChangeOrigin.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFetchData();\n  }\n\n  getFetchData() {\n    fetchData()\n      .then(data => {\n        this.setState({\n          rmData:data.results\n        })\n      })\n  }\n\n  handleInputChange(event) {\n    const query = event.currentTarget.value;\n    this.setState({\n      query: query\n    })   \n  }\n\n  getUserGender(event) {\n    const genderSelected = event.currentTarget.value;\n    this.setState({\n      gender: genderSelected\n    })\n  }\n\n  handleIsHuman(event) {\n    const isChecked = event.currentTarget.checked;\n    this.setState({\n      human: isChecked\n    })\n  }\n\n  handleIsAlien(event) {\n    const isChecked = event.currentTarget.checked;\n    this.setState({\n      alien: isChecked\n    })\n  }\n\n  handleChangeOrigin(event) {\n    const originSearched = event.currentTarget.value;\n    this.setState({\n      origin: originSearched,\n    })\n  }\n\n  render() {\n    const {rmData, query, gender, human, alien, origin} = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"app__header\">\n          <Link className=\"app__title-link\" to=\"/\">\n            <h1 className=\"app__title\">RICK AND MORTY CHARACTERS</h1>\n          </Link>\n        </header>\n        \n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                handleInputChange={this.handleInputChange}\n                rmData={rmData}\n                query={query}\n                gender={gender}\n                getUserGender={this.getUserGender}\n                handleIsHuman={this.handleIsHuman}\n                handleIsAlien={this.handleIsAlien}\n                human={human}\n                alien={alien}\n                handleChangeOrigin={this.handleChangeOrigin}\n                origin={origin}\n              />\n            )\n          }}\n          />\n\n          <Route path=\"/character-detail/:id\" render={(routerProps)=> {\n            return(\n              <CharacterDetail\n              routerProps={routerProps}\n              rmData={rmData}\n              />\n            )\n          }} \n          />\n        </Switch>\n\n        <footer className=\"app__footer\">\n          <p className=\"footer__phrase\">Created with <span role=\"img\" aria-label=\"heart\">‚ù£Ô∏è</span> by Andreina Romero Garc√≠a ¬© in Adalab</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchData = () => {\n    return fetch(endpoint).then(response => response.json())\n}\n\nexport {fetchData};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));"],"sourceRoot":""}